<div class="container mt-4">
    <h1 class="page-title">
        <i class="fas fa-calendar-alt treasure-icon me-3"></i>
        Daily Trading Chronicles
        <i class="fas fa-scroll treasure-icon ms-3"></i>
    </h1>

    <!-- Weekly Chart -->
    <div class="daily-card">
        <h3 class="text-center mb-4" style="color: var(--osrs-brown); font-family: 'MedievalSharp', cursive;">
            <i class="fas fa-chart-bar me-2 treasure-icon"></i>
            üìä Last 7 Days Performance
        </h3>
        <div class="chart-container" id="chartContainer">
            <canvas id="weeklyChart" style="display: none;"></canvas>
            <div id="chartFallback" class="chart-fallback">
                <h4>üìä 7-Day Profit Overview</h4>
                <div id="simpleChart" class="simple-bar-chart">
                    <!-- Simple bars will be generated here -->
                </div>
            </div>
        </div>
    </div>

    <div class="rune-divider">
        <i class="fas fa-dice-d20"></i> ‚ö° <i class="fas fa-coins"></i> ‚ö° <i class="fas fa-gem"></i> ‚ö° <i class="fas fa-dice-d20"></i>
    </div>

    <!-- Daily Returns List -->
    <div class="row">
        {{#each dailyReturns}}
            <div class="col-lg-6 col-xl-4">
                <div class="daily-card">
                    <div class="date-header text-center">
                        <h4 class="mb-1">
                            <i class="fas fa-calendar-day me-2"></i>
                            {{formatDate date}}
                        </h4>
                        <small>{{date}}</small>
                    </div>

                    <div class="stats-grid">
                        <div class="stat-box">
                            <i class="fas fa-coins fa-3x mb-3 treasure-icon"></i>
                            <h4 class="{{#gt dailyProfit 0}}profit-positive gp-text{{else}}profit-negative{{/gt}}">
                                {{formatNumber dailyProfit}} GP
                            </h4>
                            <strong>üí∞ Daily Profit</strong>
                        </div>

                        <div class="stat-box">
                            <i class="fas fa-crown fa-3x mb-3" style="color: var(--osrs-gold);"></i>
                            <h6 class="fw-bold">{{topItem}}</h6>
                            <small class="{{#gt topItemProfit 0}}profit-positive{{else}}profit-negative{{/gt}}">
                                {{formatNumber topItemProfit}} GP
                            </small>
                        </div>

                        <div class="stat-box">
                            <i class="fas fa-list-ol fa-3x mb-3" style="color: var(--osrs-blue);"></i>
                            <h4 style="color: var(--osrs-blue);">{{totalTrades}}</h4>
                            <strong>üìú Total Trades</strong>
                        </div>

                        <div class="stat-box">
                            <i class="fas fa-check-circle fa-3x mb-3" style="color: var(--osrs-green);"></i>
                            <h4 style="color: var(--osrs-green);">{{finishedTrades}}</h4>
                            <strong>‚úÖ Completed</strong>
                        </div>
                    </div>

                    <div class="text-center mt-3">
                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted">
                                <i class="fas fa-hourglass-half me-1"></i>
                                Active: <strong>{{activeTrades}}</strong>
                            </small>
                            <small class="text-muted">
                                <i class="fas fa-calculator me-1"></i>
                                Success Rate: <strong>{{#gt totalTrades 0}}{{#gt finishedTrades 0}}{{math finishedTrades "*" 100 "/" totalTrades}}%{{else}}0%{{/gt}}{{else}}0%{{/gt}}</strong>
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        {{else}}
            <div class="col-12">
                <div class="daily-card text-center">
                    <div style="color: var(--osrs-brown);">
                        <i class="fas fa-calendar-times fa-4x mb-3"></i>
                        <h4>No Trading Data Found</h4>
                        <p>üè∞ Begin your trading journey by importing your first CSV file!</p>
                        {{#if ../isAdmin}}
                            <a href="/upload" class="btn btn-primary mt-3">
                                <i class="fas fa-upload me-2"></i>üì§ Import Trading Data
                            </a>
                        {{/if}}
                    </div>
                </div>
            </div>
        {{/each}}
    </div>

    <!-- Footer -->
    <div class="text-center mt-5 mb-4">
        <p style="color: var(--osrs-gold); font-family: 'MedievalSharp', cursive; font-size: 1.2rem;">
            üè∞ May your trades be profitable and your losses be minimal! üè∞
        </p>
    </div>
</div>

<style>
    body {
        background:
            radial-gradient(circle at 30% 40%, rgba(255,215,0,0.1) 0%, transparent 60%),
            radial-gradient(circle at 70% 70%, rgba(139,69,19,0.08) 0%, transparent 50%),
            radial-gradient(circle at 10% 90%, rgba(255,215,0,0.05) 0%, transparent 40%),
            linear-gradient(125deg, #1a202c 0%, #2d3748 30%, #1a365d 60%, #2c5282 90%),
            repeating-conic-gradient(from 0deg at 50% 50%, transparent 0deg, rgba(255,215,0,0.03) 15deg, transparent 30deg);
        background-size: 350px 350px, 400px 400px, 200px 200px, 100% 100%, 60px 60px;
        background-attachment: fixed;
        min-height: 100vh;
        animation: goldDance 30s ease-in-out infinite;
    }

    @keyframes goldDance {
        0%, 100% { filter: brightness(1) contrast(1); }
        50% { filter: brightness(1.05) contrast(1.1); }
    }

    .daily-card {
        background: linear-gradient(145deg, var(--parchment), #E6D7C3);
        border: 6px solid var(--osrs-brown);
        border-radius: 25px;
        padding: 25px;
        margin-bottom: 25px;
        box-shadow:
            0 10px 30px rgba(0,0,0,0.3),
            inset 0 2px 10px rgba(255,215,0,0.1);
        transition: all 0.4s ease;
        position: relative;
        overflow: hidden;
    }

    .daily-card::before {
        content: "";
        position: absolute;
        top: -2px;
        left: -2px;
        right: -2px;
        bottom: -2px;
        background: linear-gradient(45deg, var(--osrs-gold), var(--osrs-brown), var(--osrs-gold));
        z-index: -1;
        border-radius: 27px;
    }

    .daily-card:hover {
        transform: translateY(-5px) scale(1.01);
        box-shadow:
            0 20px 40px rgba(0,0,0,0.4),
            0 0 30px rgba(255,215,0,0.3);
    }

    .profit-positive {
        color: var(--osrs-green);
        font-weight: bold;
        text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
    }

    .profit-negative {
        color: var(--osrs-red);
        font-weight: bold;
        text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
    }

    .date-header {
        background: linear-gradient(135deg, var(--osrs-brown), var(--osrs-dark-brown));
        color: var(--osrs-gold);
        border-radius: 20px;
        padding: 20px;
        margin-bottom: 20px;
        border: 3px solid var(--osrs-gold);
        text-shadow: 2px 2px 4px rgba(0,0,0,0.7);
        font-family: 'MedievalSharp', cursive;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin: 25px 0;
    }

    .stat-box {
        background: linear-gradient(145deg, rgba(255,255,255,0.9), rgba(240,240,240,0.9));
        border: 4px solid var(--osrs-brown);
        border-radius: 20px;
        padding: 25px;
        text-align: center;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .stat-box::before {
        content: "";
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,215,0,0.3), transparent);
        transition: left 0.5s;
    }

    .stat-box:hover::before {
        left: 100%;
    }

    .stat-box:hover {
        border-color: var(--osrs-gold);
        transform: translateY(-5px);
        box-shadow: 0 10px 25px rgba(0,0,0,0.2);
    }

    .page-title {
        font-family: 'MedievalSharp', cursive;
        color: var(--osrs-gold);
        text-shadow: 3px 3px 6px rgba(0,0,0,0.8);
        font-size: 3rem;
        text-align: center;
        margin-bottom: 40px;
    }

    .gp-text {
        background: linear-gradient(45deg, #FFD700, #FFA500, #FFD700);
        background-size: 200% 200%;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        animation: goldShimmer 2s ease-in-out infinite;
        font-weight: bold;
    }

    @keyframes goldShimmer {
        0%, 100% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
    }

    .treasure-icon {
        color: var(--osrs-gold);
        animation: bounce 2s infinite;
        filter: drop-shadow(0 0 10px var(--osrs-gold));
    }

    @keyframes bounce {
        0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
        40% { transform: translateY(-10px); }
        60% { transform: translateY(-5px); }
    }

    .chart-container {
        background: rgba(255,255,255,0.95);
        border: 4px solid var(--osrs-brown);
        border-radius: 20px;
        padding: 20px;
        margin: 20px 0;
        position: relative;
        height: 400px;
    }

    .rune-divider {
        text-align: center;
        margin: 40px 0;
        color: var(--osrs-gold);
        font-size: 2rem;
    }

    .chart-fallback {
        text-align: center;
        padding: 50px;
        color: #8B4513;
        font-family: 'Cinzel', serif;
    }

    .chart-fallback h4 {
        font-family: 'MedievalSharp', cursive;
        color: var(--osrs-brown);
        margin-bottom: 20px;
    }

    .simple-bar-chart {
        display: flex;
        align-items: end;
        justify-content: space-around;
        height: 200px;
        margin: 20px 0;
        padding: 20px 20px 60px 20px;
        background: rgba(255,255,255,0.1);
        border-radius: 10px;
    }

    .bar {
        background: linear-gradient(to top, #FFD700, #FFA500);
        border: 2px solid #8B4513;
        border-radius: 5px 5px 0 0;
        min-width: 40px;
        margin: 0 5px;
        position: relative;
        transition: all 0.3s ease;
    }

    .bar:hover {
        transform: scale(1.05);
        box-shadow: 0 5px 15px rgba(255,215,0,0.5);
    }

    .bar-label {
        position: absolute;
        bottom: -45px;
        left: 50%;
        transform: translateX(-50%);
        font-size: 12px;
        color: #8B4513;
        font-weight: bold;
        text-align: center;
        line-height: 1.2;
    }

    .bar-value {
        position: absolute;
        top: -25px;
        left: 50%;
        transform: translateX(-50%);
        font-size: 10px;
        color: #8B4513;
        font-weight: bold;
        white-space: nowrap;
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--osrs-blue), #1E90FF);
        border: 3px solid var(--osrs-gold);
        color: white;
        font-weight: bold;
        padding: 15px 30px;
        border-radius: 15px;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 1px;
        font-family: 'Cinzel', serif;
    }

    .btn-primary:hover {
        background: linear-gradient(135deg, #1E90FF, var(--osrs-blue));
        transform: translateY(-3px);
        box-shadow: 0 8px 20px rgba(0,0,0,0.3);
        color: white;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        console.log('DOM loaded, initializing chart...');

        // Get data from Handlebars
        const weeklyComparison = {{{json weeklyComparison}}};
        const weekData = (weeklyComparison && weeklyComparison.weekData) ? weeklyComparison.weekData : [];

        console.log('Weekly comparison object:', weeklyComparison);
        console.log('Week data array:', weekData);

        // Create simple chart with actual data
        function createSimpleChart() {
            const simpleChart = document.getElementById('simpleChart');
            if (!simpleChart) {
                console.error('Simple chart container not found');
                return;
            }

            // Use actual data or create sample data
            let chartData = weekData;
            if (!chartData || chartData.length === 0) {
                console.log('No week data found, creating sample data');
                chartData = [
                    { date: '2025-07-31', totalProfit: 0 },
                    { date: '2025-08-01', totalProfit: 0 },
                    { date: '2025-08-02', totalProfit: 0 },
                    { date: '2025-08-03', totalProfit: 0 },
                    { date: '2025-08-04', totalProfit: 0 },
                    { date: '2025-08-05', totalProfit: 0 },
                    { date: '2025-08-06', totalProfit: 0 }
                ];
            }

            // Find max value for scaling
            const maxProfit = Math.max(...chartData.map(day => day.totalProfit || 0), 1);
            const maxHeight = 150;

            simpleChart.innerHTML = '';

            chartData.forEach(day => {
                const profit = day.totalProfit || 0;
                const height = maxProfit > 0 ? (profit / maxProfit) * maxHeight : 5;

                const bar = document.createElement('div');
                bar.className = 'bar';
                bar.style.height = Math.max(height, 5) + 'px';

                const label = document.createElement('div');
                label.className = 'bar-label';
                const date = new Date(day.date + 'T12:00:00');

                const dayName = date.toLocaleDateString('en-US', { weekday: 'short' });
                const dateNum = date.toLocaleDateString('en-US', { day: 'numeric' });

                label.innerHTML = `
                    <div style="font-weight: bold; margin-bottom: 2px;">${dayName}</div>
                    <div style="font-size: 10px; opacity: 0.8;">${dateNum}</div>
                `;

                const value = document.createElement('div');
                value.className = 'bar-value';
                if (profit > 0) {
                    value.textContent = profit.toLocaleString() + ' GP';
                } else {
                    value.textContent = '0 GP';
                }

                bar.appendChild(label);
                bar.appendChild(value);
                simpleChart.appendChild(bar);
            });

            console.log('Simple chart created with', chartData.length, 'bars');
        }

        // Try Chart.js first, fall back to simple chart
        function tryChartJS() {
            if (typeof Chart !== 'undefined' && weekData && weekData.length > 0) {
                console.log('Chart.js available, creating advanced chart...');

                const ctx = document.getElementById('weeklyChart');
                if (ctx) {
                    try {
                        ctx.style.display = 'block';
                        document.getElementById('chartFallback').style.display = 'none';

                        new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: weekData.map(day => {
                                    const date = new Date(day.date + 'T12:00:00');
                                    return date.toLocaleDateString('en-US', {
                                        weekday: 'short',
                                        month: 'short',
                                        day: 'numeric'
                                    });
                                }),
                                datasets: [{
                                    label: 'Daily Profit (GP)',
                                    data: weekData.map(day => day.totalProfit || 0),
                                    backgroundColor: [
                                        'rgba(255, 215, 0, 0.8)',
                                        'rgba(255, 165, 0, 0.8)',
                                        'rgba(255, 215, 0, 0.8)',
                                        'rgba(255, 140, 0, 0.8)',
                                        'rgba(255, 215, 0, 0.8)',
                                        'rgba(255, 165, 0, 0.8)',
                                        'rgba(255, 215, 0, 0.8)'
                                    ],
                                    borderColor: '#8B4513',
                                    borderWidth: 2
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                plugins: {
                                    title: {
                                        display: true,
                                        text: 'üìä Last 7 Days Profit Performance'
                                    }
                                },
                                scales: {
                                    y: {
                                        beginAtZero: true,
                                        ticks: {
                                            callback: function(value) {
                                                return value.toLocaleString() + ' GP';
                                            }
                                        }
                                    }
                                }
                            }
                        });
                        console.log('Chart.js chart created successfully!');
                        return;
                    } catch (error) {
                        console.error('Error creating Chart.js chart:', error);
                    }
                }
            }

            console.log('Using simple chart fallback');
            createSimpleChart();
        }

        tryChartJS();
    });
</script>